#!/usr/bin/env node
/* eslint-disable */
const fs = require('fs');
const path = require('path');
const glob = require('glob');

const outputDir = 'src/';
const lessDir = 'src/css';

const command = process.argv[2] || null;
const type = process.argv[3] || null;
const name = process.argv[4] || null;

function toKebabCase(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
}

if(
  command == 'a' && (
    type == 'app' || 
    type == 'component' || 
    type == 'page'
  ) &&
  name != ''
) {
  const newDir = path.join(__dirname, outputDir, type+'s/'+name);
  const kebabName = toKebabCase(name)
  fs.mkdirSync(newDir);
  fs.writeFileSync(path.join(newDir, 'index.tsx'), `import styles from './styles-${kebabName}.less'`);
  fs.writeFileSync(path.join(newDir, `styles-${kebabName}.less`), `@import (reference) '${path.relative(newDir,lessDir)}/_constants.less';`);
  console.log(`
Created new component in ${newDir}
  `)
} else if (
  command == 'r' && (
    type == 'app' || 
    type == 'component' ||
    type == 'page'
  ) &&
  name != ''
) {
  const findDir = path.join(__dirname, outputDir, type+'s/'+name);
  if(fs.existsSync(findDir)) {
    var result = fs.rmSync(findDir, { recursive: true, force: true });
    console.log(`\nDeleted component in ${findDir}`);
  } else {
    console.log(`Component not found`);
  }
} else {
  console.log(`
To create component and generate less import file use:
  ./mancomp.js a [app | component | page] [name]

To remove component and generate less import file use:
  ./mancomp.js r [app | component | page] [name]

Type is a subfolder in your public directory
  `);
}



